DROP TABLE ORDER_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE CART_ITEM CASCADE CONSTRAINTS;
DROP TABLE WISHLIST_ITEM CASCADE CONSTRAINTS;
DROP TABLE DISCOUNT_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE REPORT CASCADE CONSTRAINTS;
DROP TABLE DISCOUNT CASCADE CONSTRAINTS;
DROP TABLE WISHLIST CASCADE CONSTRAINTS;
DROP TABLE ORDERS CASCADE CONSTRAINTS;
DROP TABLE CART CASCADE CONSTRAINTS;
DROP TABLE COLLECTION_SLOT CASCADE CONSTRAINTS;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE REVIEW CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE SHOP CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;

CREATE TABLE USERS (
    USER_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    MIDDLE_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50) NOT NULL,
    AGE INT NOT NULL,
    PHONE VARCHAR2(10) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE,
    USERNAME VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(1000) NOT NULL,
    ROLE VARCHAR2(20) NOT NULL,
    CREATED_DATE DATE,
    UPDATED_DATE DATE,
    VERIFICATION_CODE VARCHAR2(255),
    IS_VERIFIED VARCHAR2(20),
    TMP_KEY VARCHAR2(90)
   
);

CREATE TABLE SHOP (
    SHOP_ID INT PRIMARY KEY,
    USER_ID INT,
    SHOP_NAME VARCHAR2(100),
    DESCRIPTIONS VARCHAR2(100),
    STATUS VARCHAR2(20),
    EMAIL VARCHAR2(100),
    CREATED_ON DATE,
    IMAGE VARCHAR2(255),
    IS_VERIFIED NUMBER,
    CATEGORY VARCHAR2(255),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)  
);

CREATE TABLE PRODUCT_CATEGORY (
    PROD_CATEGORY_ID INT PRIMARY KEY,
    NAMES VARCHAR2(50),
    CREATED_ON DATE,
    UPDATED_ON DATE
);

CREATE TABLE PRODUCT (
    PRODUCT_ID INT PRIMARY KEY,
    PROD_CATEGORY_ID INT,
    SHOP_ID INT,
    NAMES VARCHAR2(100),
    PRICE DECIMAL(10, 2),
    DESCRIPTIONS VARCHAR2(255),
    QUANTITY INT,
    MIN_ORDER INT,
    MAX_ORDER INT,
    IMAGE VARCHAR2(255), 
    STOCK_NUMBER INT,
    WEIGHT INT,
    MANUFACTURING_DATE DATE,
    EXPIRY_DATE DATE,
    ALLERGY VARCHAR2(900),
    FOREIGN KEY (PROD_CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(PROD_CATEGORY_ID),
    FOREIGN KEY (SHOP_ID) REFERENCES SHOP(SHOP_ID)
);


CREATE TABLE REVIEW (
    REVIEW_ID INT PRIMARY KEY,
    USER_ID INT,
    PRODUCT_ID INT,
    RATING INT,
    COMMENTS VARCHAR2(100),
    REVIEW_DATE DATE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE COLLECTION_SLOT (
    COLL_SLOT_ID INT PRIMARY KEY,
    SLOT_DATE DATE,
    DAY_DETAILS VARCHAR2(100),
    TIME_DETAILS VARCHAR2(100),
    CART_ID NUMBER
);

CREATE TABLE CART (
    CART_ID INT PRIMARY KEY,
    USER_ID INT NOT NULL,
    TOTAL_PRICE VARCHAR2(100),
    CART_PRODUCT VARCHAR2(100),
    CREATED_ON DATE,
    UPDATED_ON DATE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE CART_ITEM (
    CART_ITEM_ID INT PRIMARY KEY,
    CART_ID INT,
    PRODUCT_ID INT,
    PRODUCT_QUANTITY NUMBER,
    FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE WISHLIST (
    WISHLIST_ID INT PRIMARY KEY,
    USER_ID INT,
    WISHLIST_PRODUCT VARCHAR2(100),
    CREATED_ON DATE,
    UPDATED_ON DATE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE WISHLIST_ITEM (
    WISHLIST_ITEM_ID INT PRIMARY KEY,
    WISHLIST_ID INT,
    PRODUCT_ID INT,
    FOREIGN KEY (WISHLIST_ID) REFERENCES WISHLIST(WISHLIST_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE DISCOUNT (
    DISCOUNT_ID INT PRIMARY KEY,
    USER_ID INT,
    DISCOUNT_AMOUNT VARCHAR2(100),
    CREATED_ON DATE,
    UPDATED_ON DATE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE DISCOUNT_PRODUCT (
    DISCOUNT_PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_ID INT,
    DISCOUNT_ID INT,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNT(DISCOUNT_ID)
);

CREATE TABLE ORDERS (
    ORDER_ID INT PRIMARY KEY,
    CART_ID INT NOT NULL,
    COLL_SLOT_ID INT NOT NULL,
    NO_OF_ITEM INT,
    TOTAL_ORDER NUMBER(10, 2),
    STATUS VARCHAR2(20),
    INVOICE VARCHAR2(1000),
    ORDER_DATE_TIME TIMESTAMP,
    FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID),
    FOREIGN KEY (COLL_SLOT_ID) REFERENCES COLLECTION_SLOT(COLL_SLOT_ID)
);


CREATE TABLE PAYMENT (
    PAYMENT_ID INT PRIMARY KEY,
    ORDER_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PAYMENT_METHOD VARCHAR2(100),
    TRANSACTION_ID VARCHAR2(100),
    PAID_AMOUNT VARCHAR2(100),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE REPORT (
    REPORT_ID INT PRIMARY KEY,
    PRODUCT_ID INT,
    REPORT_DETAILS VARCHAR2(100),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE ORDER_PRODUCT (
    ORDER_PRODUCT_ID INT PRIMARY KEY,
    ORDER_ID INT,
    PRODUCT_ID INT,
    QUANTITY NUMBER,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);